paths:
  /users/create:
    post:
      tags:
      - Usuario/Autentificación
      summary: Creacion de usuario.
      requestBody:
        content:
          application/json:
              type: object
              required:
                - first_name
                - last_name
                - email
                - age
                - password
              properties:
                first_name:
                  type: string
                  description: Nombre
                last_name:
                  type: string
                  description: Apellido
                email:
                  type: string
                  description: Email
                age:
                  type: integer
                  description: Edad
                password:
                  type: string
                  description: Password
              example:
                first_name: Juan
                last_name: Perez
                email: prueba@gmail.com
                age: 27
                password: "123456"
      responses:
        200:
          description: Token generado correctamente.
  /users/authenticate:
    post:
      tags:
      - Usuario/Autentificación
      summary: Autentificacion de usuario. Genera Token.
      requestBody:
        content:
          application/json:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: Email
                password:
                  type: string
                  description: Password
              example:
                email: prueba@gmail.com
                password: "123456"
      responses:
        200:
          description: Token generado correctamente.
  /users/addCart:
    post:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Agrega carrito al usuario.
      requestBody:
        content:
          application/json:
              type: object
              required:
                - email
                - cid
              properties:
                email:
                  type: string
                  description: Email.
                cid:
                  type: string
                  description: Id de carrito.
              example:
                email: prueba@gmail.com
                cid: "6537056e4b5e28809b9ad639"
      responses:
        200:
          description: Carrito añadido correctamente.
  /users/premium/{uid}:
    put:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Setea al usuario como premium.
      parameters:
        - in: path
          name: uid
          required: true
          description: id de usuario.
          schema:
            type: string
      responses:
        200:
          description: Usuario seteado como premium correctamente.
  /users/current:
    get:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Devuelve usuario actual (Token).
      responses:
        200:
          description: Usuario obtenido correctamente.    
  /users/:
    get:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Devuelve todos los usuarios.
      responses:
        200:
          description: Usuarios obtenidos correctamente.  
    delete:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Borrar todos los usuarios que no hayan tenido conexion por dos dias. Se envia mail a cada usuario.
      responses:
        200:
          description: Usuarios borrados correctamente.  
  /users/{uid}:
    delete:
      security:
      - bearerAuth: []
      tags:
      - Usuario/Autentificación
      summary: Borrar usuario por Id.
      parameters:
        - in: path
          name: uid
          required: true
          description: id de usuario.
          schema:
            type: string
      responses:
        200:
          description: Usuario borrado correctamente.  
  /users/{uid}/documents:
    post:
      security:
      - bearerAuth: []
      consumes:
      - multipart/form-data
      tags:
      - Usuario/Autentificación
      summary: Carga de documentos para el usuario.
      parameters:
        - in: path
          name: uid
          required: true
          description: id de usuario.
          schema:
            type: string
      requestBody:
        content:
           multipart/form-data:
            schema:            # Request payload
              type: object
              properties:
                documentType:
                  type: string
                  description: Tipo de documento = (ide) Identificacion, (cdd) Comprobante de domicilio, (cdc) Comprobante de estado de cuenta, (oth) Otros.
                document:
                  type: file
                  description: Documento.
                profile:
                  type: file
                  description: Perfil.
                product:
                  type: file
                  description: Producto.
              # - in: formData
              #   name: documentType
              #   description: Tipo de documento = (ide) Identificacion, (cdd) Comprobante de domicilio, (cde) Comprobante de estado de cuenta, (oth) Otros.
              #   type: string
              #   required: false
              # - in: formData
              #   name: document
              #   description: Documento
              #   schema:
              #     type: file
              #   required: false
              # - in: formData
              #   name: profile
              #   description: Perfil
              #   schema:
              #     type: file
              #   required: false
              # - in: formData
              #   name: product
              #   description: Producto
              #   schema:
              #     type: file
              #   required: false
      responses:
        200:
          description: Documento cargado correctamente.